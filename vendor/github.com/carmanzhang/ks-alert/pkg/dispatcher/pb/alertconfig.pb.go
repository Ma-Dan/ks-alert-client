// Code generated by protoc-gen-go. DO NOT EDIT.
// source: alertconfig.proto

/*
Package pb is a generated protocol buffer package.

It is generated from these files:
	alertconfig.proto
	alerthistory.proto
	alertrule.proto
	ent.proto
	error.proto
	product.proto
	receiver.proto
	repeatsend.proto
	resource.proto
	resourcetype.proto
	resourceuritmpl.proto
	silence.proto
	suggestion.proto

It has these top-level messages:
	AlertConfig
	AlertConfigID
	AlertConfigResponse
	AlertHistory
	AlertHistoryRequest
	AlertHistoryResponse
	AlertRule
	AlertRuleID
	AlertRuleResponse
	AlertRuleGroup
	Enterprise
	EnterpriseID
	EnterpriseResponse
	Error
	Product
	ProductID
	ProductResponse
	ReceiverGroup
	Receiver
	ResourceGroup
	Resource
	ResourceType
	ResourceTypeID
	ResourceTypeResponse
	ResourceUriTmpls
	SilenceID
	Silence
	SilenceResponse
	Suggestion
	SuggestionID
	SuggestionResponse
*/
package pb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type AlertConfig_UpdateType int32

const (
	AlertConfig_RECEIVER      AlertConfig_UpdateType = 0
	AlertConfig_ALERTRULE     AlertConfig_UpdateType = 1
	AlertConfig_RESOURCE      AlertConfig_UpdateType = 2
	AlertConfig_SEVERITY      AlertConfig_UpdateType = 3
	AlertConfig_EFFECTIVETIME AlertConfig_UpdateType = 4
	AlertConfig_ENABLE        AlertConfig_UpdateType = 5
	AlertConfig_DESC          AlertConfig_UpdateType = 6
)

var AlertConfig_UpdateType_name = map[int32]string{
	0: "RECEIVER",
	1: "ALERTRULE",
	2: "RESOURCE",
	3: "SEVERITY",
	4: "EFFECTIVETIME",
	5: "ENABLE",
	6: "DESC",
}
var AlertConfig_UpdateType_value = map[string]int32{
	"RECEIVER":      0,
	"ALERTRULE":     1,
	"RESOURCE":      2,
	"SEVERITY":      3,
	"EFFECTIVETIME": 4,
	"ENABLE":        5,
	"DESC":          6,
}

func (x AlertConfig_UpdateType) String() string {
	return proto.EnumName(AlertConfig_UpdateType_name, int32(x))
}
func (AlertConfig_UpdateType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0, 0} }

// alert config
type AlertConfig struct {
	AlertConfigId   string                 `protobuf:"bytes,1,opt,name=alert_config_id" json:"alert_config_id,omitempty"`
	AlertConfigName string                 `protobuf:"bytes,2,opt,name=alert_config_name" json:"alert_config_name,omitempty"`
	AlertRuleGroup  *AlertRuleGroup        `protobuf:"bytes,3,opt,name=alert_rule_group" json:"alert_rule_group,omitempty"`
	ResourceGroup   *ResourceGroup         `protobuf:"bytes,4,opt,name=resource_group" json:"resource_group,omitempty"`
	ReceiverGroup   *ReceiverGroup         `protobuf:"bytes,5,opt,name=receiver_group" json:"receiver_group,omitempty"`
	SeverityId      string                 `protobuf:"bytes,6,opt,name=severity_id" json:"severity_id,omitempty"`
	SeverityCh      string                 `protobuf:"bytes,7,opt,name=severity_ch" json:"severity_ch,omitempty"`
	UpdateType      AlertConfig_UpdateType `protobuf:"varint,8,opt,name=update_type,enum=pb.AlertConfig_UpdateType" json:"update_type,omitempty"`
	EnableTime      string                 `protobuf:"bytes,9,opt,name=enable_time" json:"enable_time,omitempty"`
	DisableTime     string                 `protobuf:"bytes,10,opt,name=disable_time" json:"disable_time,omitempty"`
	Enable          bool                   `protobuf:"varint,11,opt,name=enable" json:"enable,omitempty"`
	Desc            string                 `protobuf:"bytes,12,opt,name=desc" json:"desc,omitempty"`
}

func (m *AlertConfig) Reset()                    { *m = AlertConfig{} }
func (m *AlertConfig) String() string            { return proto.CompactTextString(m) }
func (*AlertConfig) ProtoMessage()               {}
func (*AlertConfig) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *AlertConfig) GetAlertConfigId() string {
	if m != nil {
		return m.AlertConfigId
	}
	return ""
}

func (m *AlertConfig) GetAlertConfigName() string {
	if m != nil {
		return m.AlertConfigName
	}
	return ""
}

func (m *AlertConfig) GetAlertRuleGroup() *AlertRuleGroup {
	if m != nil {
		return m.AlertRuleGroup
	}
	return nil
}

func (m *AlertConfig) GetResourceGroup() *ResourceGroup {
	if m != nil {
		return m.ResourceGroup
	}
	return nil
}

func (m *AlertConfig) GetReceiverGroup() *ReceiverGroup {
	if m != nil {
		return m.ReceiverGroup
	}
	return nil
}

func (m *AlertConfig) GetSeverityId() string {
	if m != nil {
		return m.SeverityId
	}
	return ""
}

func (m *AlertConfig) GetSeverityCh() string {
	if m != nil {
		return m.SeverityCh
	}
	return ""
}

func (m *AlertConfig) GetUpdateType() AlertConfig_UpdateType {
	if m != nil {
		return m.UpdateType
	}
	return AlertConfig_RECEIVER
}

func (m *AlertConfig) GetEnableTime() string {
	if m != nil {
		return m.EnableTime
	}
	return ""
}

func (m *AlertConfig) GetDisableTime() string {
	if m != nil {
		return m.DisableTime
	}
	return ""
}

func (m *AlertConfig) GetEnable() bool {
	if m != nil {
		return m.Enable
	}
	return false
}

func (m *AlertConfig) GetDesc() string {
	if m != nil {
		return m.Desc
	}
	return ""
}

type AlertConfigID struct {
	AlertConfigId string `protobuf:"bytes,1,opt,name=alert_config_id" json:"alert_config_id,omitempty"`
}

func (m *AlertConfigID) Reset()                    { *m = AlertConfigID{} }
func (m *AlertConfigID) String() string            { return proto.CompactTextString(m) }
func (*AlertConfigID) ProtoMessage()               {}
func (*AlertConfigID) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *AlertConfigID) GetAlertConfigId() string {
	if m != nil {
		return m.AlertConfigId
	}
	return ""
}

type AlertConfigResponse struct {
	AlertConfigId *AlertConfigID `protobuf:"bytes,1,opt,name=alert_config_id" json:"alert_config_id,omitempty"`
	AlertConfig   *AlertConfig   `protobuf:"bytes,2,opt,name=alert_config" json:"alert_config,omitempty"`
	Error         *Error         `protobuf:"bytes,3,opt,name=error" json:"error,omitempty"`
}

func (m *AlertConfigResponse) Reset()                    { *m = AlertConfigResponse{} }
func (m *AlertConfigResponse) String() string            { return proto.CompactTextString(m) }
func (*AlertConfigResponse) ProtoMessage()               {}
func (*AlertConfigResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *AlertConfigResponse) GetAlertConfigId() *AlertConfigID {
	if m != nil {
		return m.AlertConfigId
	}
	return nil
}

func (m *AlertConfigResponse) GetAlertConfig() *AlertConfig {
	if m != nil {
		return m.AlertConfig
	}
	return nil
}

func (m *AlertConfigResponse) GetError() *Error {
	if m != nil {
		return m.Error
	}
	return nil
}

func init() {
	proto.RegisterType((*AlertConfig)(nil), "pb.AlertConfig")
	proto.RegisterType((*AlertConfigID)(nil), "pb.AlertConfigID")
	proto.RegisterType((*AlertConfigResponse)(nil), "pb.AlertConfigResponse")
	proto.RegisterEnum("pb.AlertConfig_UpdateType", AlertConfig_UpdateType_name, AlertConfig_UpdateType_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for AlertConfigHandler service

type AlertConfigHandlerClient interface {
	// alert
	CreateAlertConfig(ctx context.Context, in *AlertConfig, opts ...grpc.CallOption) (*AlertConfigResponse, error)
	DeleteAlertConfig(ctx context.Context, in *AlertConfig, opts ...grpc.CallOption) (*AlertConfigResponse, error)
	UpdateAlertConfig(ctx context.Context, in *AlertConfig, opts ...grpc.CallOption) (*AlertConfigResponse, error)
	GetAlertConfig(ctx context.Context, in *AlertConfig, opts ...grpc.CallOption) (*AlertConfigResponse, error)
}

type alertConfigHandlerClient struct {
	cc *grpc.ClientConn
}

func NewAlertConfigHandlerClient(cc *grpc.ClientConn) AlertConfigHandlerClient {
	return &alertConfigHandlerClient{cc}
}

func (c *alertConfigHandlerClient) CreateAlertConfig(ctx context.Context, in *AlertConfig, opts ...grpc.CallOption) (*AlertConfigResponse, error) {
	out := new(AlertConfigResponse)
	err := grpc.Invoke(ctx, "/pb.AlertConfigHandler/CreateAlertConfig", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *alertConfigHandlerClient) DeleteAlertConfig(ctx context.Context, in *AlertConfig, opts ...grpc.CallOption) (*AlertConfigResponse, error) {
	out := new(AlertConfigResponse)
	err := grpc.Invoke(ctx, "/pb.AlertConfigHandler/DeleteAlertConfig", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *alertConfigHandlerClient) UpdateAlertConfig(ctx context.Context, in *AlertConfig, opts ...grpc.CallOption) (*AlertConfigResponse, error) {
	out := new(AlertConfigResponse)
	err := grpc.Invoke(ctx, "/pb.AlertConfigHandler/UpdateAlertConfig", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *alertConfigHandlerClient) GetAlertConfig(ctx context.Context, in *AlertConfig, opts ...grpc.CallOption) (*AlertConfigResponse, error) {
	out := new(AlertConfigResponse)
	err := grpc.Invoke(ctx, "/pb.AlertConfigHandler/GetAlertConfig", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for AlertConfigHandler service

type AlertConfigHandlerServer interface {
	// alert
	CreateAlertConfig(context.Context, *AlertConfig) (*AlertConfigResponse, error)
	DeleteAlertConfig(context.Context, *AlertConfig) (*AlertConfigResponse, error)
	UpdateAlertConfig(context.Context, *AlertConfig) (*AlertConfigResponse, error)
	GetAlertConfig(context.Context, *AlertConfig) (*AlertConfigResponse, error)
}

func RegisterAlertConfigHandlerServer(s *grpc.Server, srv AlertConfigHandlerServer) {
	s.RegisterService(&_AlertConfigHandler_serviceDesc, srv)
}

func _AlertConfigHandler_CreateAlertConfig_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AlertConfig)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AlertConfigHandlerServer).CreateAlertConfig(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.AlertConfigHandler/CreateAlertConfig",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AlertConfigHandlerServer).CreateAlertConfig(ctx, req.(*AlertConfig))
	}
	return interceptor(ctx, in, info, handler)
}

func _AlertConfigHandler_DeleteAlertConfig_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AlertConfig)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AlertConfigHandlerServer).DeleteAlertConfig(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.AlertConfigHandler/DeleteAlertConfig",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AlertConfigHandlerServer).DeleteAlertConfig(ctx, req.(*AlertConfig))
	}
	return interceptor(ctx, in, info, handler)
}

func _AlertConfigHandler_UpdateAlertConfig_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AlertConfig)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AlertConfigHandlerServer).UpdateAlertConfig(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.AlertConfigHandler/UpdateAlertConfig",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AlertConfigHandlerServer).UpdateAlertConfig(ctx, req.(*AlertConfig))
	}
	return interceptor(ctx, in, info, handler)
}

func _AlertConfigHandler_GetAlertConfig_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AlertConfig)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AlertConfigHandlerServer).GetAlertConfig(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.AlertConfigHandler/GetAlertConfig",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AlertConfigHandlerServer).GetAlertConfig(ctx, req.(*AlertConfig))
	}
	return interceptor(ctx, in, info, handler)
}

var _AlertConfigHandler_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.AlertConfigHandler",
	HandlerType: (*AlertConfigHandlerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateAlertConfig",
			Handler:    _AlertConfigHandler_CreateAlertConfig_Handler,
		},
		{
			MethodName: "DeleteAlertConfig",
			Handler:    _AlertConfigHandler_DeleteAlertConfig_Handler,
		},
		{
			MethodName: "UpdateAlertConfig",
			Handler:    _AlertConfigHandler_UpdateAlertConfig_Handler,
		},
		{
			MethodName: "GetAlertConfig",
			Handler:    _AlertConfigHandler_GetAlertConfig_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "alertconfig.proto",
}

func init() { proto.RegisterFile("alertconfig.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 490 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x93, 0x5d, 0x8b, 0xd3, 0x4e,
	0x14, 0xc6, 0x37, 0x7d, 0xfb, 0xb7, 0x27, 0x69, 0x37, 0x9d, 0xfd, 0xc3, 0xc6, 0x5e, 0x95, 0x80,
	0x10, 0x45, 0x2a, 0xd4, 0x5b, 0x41, 0xba, 0xe9, 0xec, 0x1a, 0xa8, 0x0a, 0x69, 0x5a, 0xd0, 0x9b,
	0x90, 0x97, 0xe3, 0x1a, 0xc8, 0x26, 0x61, 0x92, 0x2c, 0xf4, 0xd6, 0xef, 0xe0, 0x87, 0xf3, 0xdb,
	0xc8, 0xcc, 0xa4, 0xbb, 0xb1, 0xe8, 0xcd, 0x7a, 0x39, 0xcf, 0xf3, 0x3b, 0xcf, 0x9c, 0xc9, 0x39,
	0x81, 0x69, 0x90, 0x22, 0xab, 0xa2, 0x3c, 0xfb, 0x9a, 0xdc, 0x2e, 0x0a, 0x96, 0x57, 0x39, 0xe9,
	0x14, 0xe1, 0x4c, 0x45, 0xc6, 0x72, 0x26, 0x85, 0xd9, 0x84, 0x61, 0x84, 0xc9, 0x3d, 0x1e, 0xcf,
	0xe7, 0xa2, 0x86, 0xd5, 0x29, 0x3e, 0x02, 0x65, 0x5e, 0xb3, 0xa8, 0x39, 0x9b, 0x3f, 0xbb, 0xa0,
	0xae, 0x38, 0x63, 0x8b, 0x5c, 0x72, 0x09, 0xb2, 0xc4, 0x97, 0xf7, 0xf8, 0x49, 0x6c, 0x28, 0x73,
	0xc5, 0x1a, 0x91, 0x67, 0xcd, 0xfd, 0x47, 0x23, 0x0b, 0xee, 0xd0, 0xe8, 0x08, 0xeb, 0x15, 0xe8,
	0xd2, 0xe2, 0xf7, 0xf8, 0xb7, 0x2c, 0xaf, 0x0b, 0xa3, 0x3b, 0x57, 0x2c, 0x75, 0x49, 0x16, 0x45,
	0xb8, 0x10, 0xf1, 0x6e, 0x9d, 0xe2, 0x0d, 0x77, 0xc8, 0x0b, 0x78, 0xe8, 0xa1, 0x61, 0x7b, 0x82,
	0x9d, 0x72, 0xd6, 0x6d, 0x9c, 0x16, 0x2a, 0xdf, 0xd3, 0xa0, 0xfd, 0x36, 0x2a, 0x1d, 0x89, 0x5e,
	0x80, 0x5a, 0xe2, 0x3d, 0xb2, 0xa4, 0x3a, 0xf0, 0x9e, 0x07, 0xa2, 0xb1, 0xb6, 0x18, 0x7d, 0x33,
	0xfe, 0x13, 0xe2, 0x6b, 0x50, 0xeb, 0x22, 0x0e, 0x2a, 0xf4, 0xab, 0x43, 0x81, 0xc6, 0x70, 0xae,
	0x58, 0x93, 0xe5, 0xec, 0xa1, 0x51, 0xf9, 0x1d, 0x16, 0x3b, 0x81, 0x78, 0x87, 0x02, 0x79, 0x0a,
	0x66, 0x41, 0x98, 0xa2, 0x5f, 0x25, 0x77, 0x68, 0x8c, 0x44, 0xca, 0xff, 0xa0, 0xc5, 0x49, 0xf9,
	0xa8, 0x82, 0x50, 0x27, 0x30, 0x90, 0xa8, 0xa1, 0xce, 0x15, 0x6b, 0x48, 0x34, 0xe8, 0xc5, 0x58,
	0x46, 0x86, 0xc6, 0x5d, 0x33, 0x03, 0x68, 0xc5, 0x6a, 0x30, 0x74, 0xa9, 0x4d, 0x9d, 0x3d, 0x75,
	0xf5, 0x33, 0x32, 0x86, 0xd1, 0x6a, 0x43, 0x5d, 0xcf, 0xdd, 0x6d, 0xa8, 0xae, 0x48, 0x73, 0xfb,
	0x69, 0xe7, 0xda, 0x54, 0xef, 0xf0, 0xd3, 0x96, 0xee, 0xa9, 0xeb, 0x78, 0x9f, 0xf5, 0x2e, 0x99,
	0xc2, 0x98, 0x5e, 0x5f, 0x53, 0xdb, 0x73, 0xf6, 0xd4, 0x73, 0x3e, 0x50, 0xbd, 0x47, 0x00, 0x06,
	0xf4, 0xe3, 0xea, 0x6a, 0x43, 0xf5, 0x3e, 0x19, 0x42, 0x6f, 0x4d, 0xb7, 0xb6, 0x3e, 0x30, 0x2d,
	0x18, 0xb7, 0x9e, 0xe4, 0xac, 0xff, 0x3a, 0x5c, 0xf3, 0xbb, 0x02, 0x17, 0x2d, 0xd4, 0xc5, 0xb2,
	0xc8, 0xb3, 0x12, 0xc9, 0xcb, 0x3f, 0x17, 0x34, 0x13, 0xf8, 0x3d, 0xfc, 0x39, 0x68, 0x6d, 0x56,
	0xec, 0x86, 0xba, 0x3c, 0x3f, 0x01, 0x89, 0x01, 0x7d, 0xb1, 0xb0, 0xcd, 0x86, 0x8c, 0xb8, 0x4f,
	0xb9, 0xb0, 0xfc, 0xd1, 0x01, 0xd2, 0x22, 0xdf, 0x07, 0x59, 0x9c, 0x22, 0x23, 0xef, 0x60, 0x6a,
	0x33, 0x0c, 0x2a, 0x6c, 0xa7, 0x9c, 0xc6, 0xce, 0x2e, 0x4f, 0x84, 0xe3, 0x13, 0xcc, 0x33, 0x1e,
	0xb0, 0xc6, 0x14, 0xff, 0x29, 0x40, 0xce, 0xed, 0xa9, 0x01, 0x6f, 0x61, 0x72, 0x83, 0xd5, 0x13,
	0xab, 0xaf, 0x7a, 0x5f, 0x3a, 0x45, 0x18, 0x0e, 0xc4, 0xff, 0xfa, 0xe6, 0x57, 0x00, 0x00, 0x00,
	0xff, 0xff, 0x6e, 0x20, 0x71, 0x09, 0x06, 0x04, 0x00, 0x00,
}
