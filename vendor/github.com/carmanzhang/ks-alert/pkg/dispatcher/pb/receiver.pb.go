// Code generated by protoc-gen-go. DO NOT EDIT.
// source: receiver.proto

package pb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// receiver group
type ReceiverGroup struct {
	ReceiverGroupId   string      `protobuf:"bytes,1,opt,name=receiver_group_id" json:"receiver_group_id,omitempty"`
	ReceiverGroupName string      `protobuf:"bytes,2,opt,name=receiver_group_name" json:"receiver_group_name,omitempty"`
	Webhook           string      `protobuf:"bytes,3,opt,name=webhook" json:"webhook,omitempty"`
	WebhookEnable     bool        `protobuf:"varint,4,opt,name=webhook_enable" json:"webhook_enable,omitempty"`
	Desc              string      `protobuf:"bytes,5,opt,name=desc" json:"desc,omitempty"`
	Receivers         []*Receiver `protobuf:"bytes,6,rep,name=receivers" json:"receivers,omitempty"`
}

func (m *ReceiverGroup) Reset()                    { *m = ReceiverGroup{} }
func (m *ReceiverGroup) String() string            { return proto.CompactTextString(m) }
func (*ReceiverGroup) ProtoMessage()               {}
func (*ReceiverGroup) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{0} }

func (m *ReceiverGroup) GetReceiverGroupId() string {
	if m != nil {
		return m.ReceiverGroupId
	}
	return ""
}

func (m *ReceiverGroup) GetReceiverGroupName() string {
	if m != nil {
		return m.ReceiverGroupName
	}
	return ""
}

func (m *ReceiverGroup) GetWebhook() string {
	if m != nil {
		return m.Webhook
	}
	return ""
}

func (m *ReceiverGroup) GetWebhookEnable() bool {
	if m != nil {
		return m.WebhookEnable
	}
	return false
}

func (m *ReceiverGroup) GetDesc() string {
	if m != nil {
		return m.Desc
	}
	return ""
}

func (m *ReceiverGroup) GetReceivers() []*Receiver {
	if m != nil {
		return m.Receivers
	}
	return nil
}

type Receiver struct {
	ReceiverId   string `protobuf:"bytes,1,opt,name=receiver_id" json:"receiver_id,omitempty"`
	ReceiverName string `protobuf:"bytes,2,opt,name=receiver_name" json:"receiver_name,omitempty"`
	Email        string `protobuf:"bytes,3,opt,name=email" json:"email,omitempty"`
	Phone        string `protobuf:"bytes,4,opt,name=phone" json:"phone,omitempty"`
	Wechat       string `protobuf:"bytes,5,opt,name=wechat" json:"wechat,omitempty"`
}

func (m *Receiver) Reset()                    { *m = Receiver{} }
func (m *Receiver) String() string            { return proto.CompactTextString(m) }
func (*Receiver) ProtoMessage()               {}
func (*Receiver) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{1} }

func (m *Receiver) GetReceiverId() string {
	if m != nil {
		return m.ReceiverId
	}
	return ""
}

func (m *Receiver) GetReceiverName() string {
	if m != nil {
		return m.ReceiverName
	}
	return ""
}

func (m *Receiver) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *Receiver) GetPhone() string {
	if m != nil {
		return m.Phone
	}
	return ""
}

func (m *Receiver) GetWechat() string {
	if m != nil {
		return m.Wechat
	}
	return ""
}

func init() {
	proto.RegisterType((*ReceiverGroup)(nil), "pb.ReceiverGroup")
	proto.RegisterType((*Receiver)(nil), "pb.Receiver")
}

func init() { proto.RegisterFile("receiver.proto", fileDescriptor6) }

var fileDescriptor6 = []byte{
	// 215 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x5c, 0xd0, 0xb1, 0x4e, 0x86, 0x30,
	0x10, 0xc0, 0xf1, 0x94, 0x0f, 0xf0, 0xe3, 0xa0, 0x18, 0x4b, 0x34, 0x35, 0x0e, 0x12, 0x26, 0x26,
	0x06, 0x7d, 0x03, 0x17, 0x77, 0x47, 0x17, 0xd2, 0xc2, 0x45, 0x88, 0x40, 0x9b, 0x82, 0xf2, 0x38,
	0xbe, 0xaa, 0xb1, 0x50, 0x62, 0xbe, 0xad, 0xf9, 0xdf, 0xa5, 0xf9, 0xe5, 0x20, 0x35, 0xd8, 0x60,
	0xff, 0x8d, 0xa6, 0xd2, 0x46, 0x2d, 0x8a, 0x79, 0x5a, 0x16, 0x3f, 0x04, 0xe8, 0xdb, 0x9e, 0x5f,
	0x8d, 0xfa, 0xd2, 0xec, 0x1e, 0x6e, 0xdc, 0x5e, 0xfd, 0xf1, 0x57, 0xea, 0xbe, 0xe5, 0x24, 0x27,
	0x65, 0xc4, 0x1e, 0x20, 0xbb, 0x18, 0x4d, 0x62, 0x44, 0xee, 0xd9, 0xe1, 0x35, 0x5c, 0xad, 0x28,
	0x3b, 0xa5, 0x3e, 0xf9, 0xc9, 0x86, 0x3b, 0x48, 0xf7, 0x50, 0xe3, 0x24, 0xe4, 0x80, 0xdc, 0xcf,
	0x49, 0x79, 0x66, 0x09, 0xf8, 0x2d, 0xce, 0x0d, 0x0f, 0xec, 0xd6, 0x23, 0x44, 0xee, 0xcf, 0x99,
	0x87, 0xf9, 0xa9, 0x8c, 0x9f, 0x92, 0x4a, 0xcb, 0xca, 0xa1, 0x8a, 0x16, 0xce, 0xee, 0xcd, 0x32,
	0x88, 0x0f, 0xc0, 0xa1, 0xba, 0x05, 0x7a, 0xc4, 0x7f, 0x1e, 0x0a, 0x01, 0x8e, 0xa2, 0x1f, 0x76,
	0x0d, 0x85, 0x40, 0x77, 0x6a, 0xda, 0x10, 0x11, 0x4b, 0x21, 0x5c, 0xb1, 0xe9, 0xc4, 0xb2, 0x31,
	0x5e, 0xfc, 0x77, 0x4f, 0x4b, 0x19, 0xda, 0xc3, 0x3c, 0xff, 0x06, 0x00, 0x00, 0xff, 0xff, 0xda,
	0xe1, 0xf3, 0x26, 0x2a, 0x01, 0x00, 0x00,
}
